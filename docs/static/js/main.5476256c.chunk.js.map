{"version":3,"sources":["components/TodoApp/todoReducer.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/TodoHeader/TodoHeader.js","components/TodoApp/TodoApp.js","hooks/useForm.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","desc","onClick","TodoList","todos","i","TodoHeader","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","useEffect","setItem","stringify","dones","length","pors","style","width","parseInt","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","htmlFor","onChange","todoId","role","document","body","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5476256c.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"add\":\r\n            return [action.payload, ...state];\r\n        case \"delete\":\r\n            return state.filter((todo) => todo.id !== action.payload);\r\n        /* case 'toggle':\r\n            return state.map((todo) => {\r\n                if (todo.id === action.payload) {\r\n                    return {...todo, \r\n                    done: !todo.done}\r\n                } else {\r\n                    return todo;\r\n                }\r\n            }) */\r\n        case \"toggle\":\r\n            return state.map((todo) => (todo.id === action.payload ? { ...todo, done: !todo.done } : todo));\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6 col-sm-12 mb-4 shadow-lg\">\r\n            <div className={!todo.done ? \"card bg-secondary bg-gradient text-light\" : \"card bg-success bg-gradient text-light\"}>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Tarea: {index + 1}</h5>\r\n                    <p className=\"card-text\">{todo.desc}</p>\r\n                    <hr />\r\n                    <div className=\"d-grid\">\r\n                        <button\r\n                            onClick={() => {\r\n                                handleDelete(todo.id);\r\n                            }}\r\n                            className=\"btn btn-dark mb-2\"\r\n                        >\r\n                            Borrar\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                handleToggle(todo.id);\r\n                            }}\r\n                            className=\"btn btn-info\"\r\n                        >\r\n                            {!todo.done ? \"Marcar como Terminada\" : \"Marcar como Pendiente\"}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TodoListItem } from \"../TodoListItem/TodoListItem\";\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n    return (\r\n        <>\r\n            <div className=\"container px-0 mt-4\">\r\n                <div className=\"row\">\r\n                    {todos.map((todo, i) => {\r\n                        return <TodoListItem key={todo.id} handleDelete={handleDelete} handleToggle={handleToggle} todo={todo} index={i} />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","export const TodoHeader = () => {\r\n    return (\r\n        <div className=\"container-fluid mb-5 shadow-lg\">\r\n            <div className=\"row\">\r\n                <div className=\"col px-0\">\r\n                    <div className=\"bg-dark text-secondary px-4 py-5 text-center\">\r\n                        <div>\r\n                            <h1 className=\"display-5 fw-bold text-white\">Lista de Tareas</h1>\r\n                            <div className=\"col-lg-6 mx-auto\">\r\n                                <p className=\"fs-5 mb-4\">AÃ±ade tu lista de tareas y guardalas en tu navegador. Asegurate de no borrar los datos de navegacion para no perder tus tareas.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useReducer } from \"react\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { todoReducer } from \"./todoReducer\";\r\n\r\nimport { TodoList } from \"../TodoList/TodoList\";\r\nimport { TodoHeader } from \"../TodoHeader/TodoHeader\";\r\n\r\nconst init = () => {\r\n    /* return [\r\n        {\r\n            id: new Date().getTime(),\r\n            desc: \"Aprender React\",\r\n            done: false,\r\n        },\r\n    ]; */\r\n    return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        const action = {\r\n            type: \"delete\",\r\n            payload: todoId,\r\n        };\r\n\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: \"toggle\",\r\n            payload: todoId,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length === 0) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false,\r\n        };\r\n\r\n        const action = {\r\n            type: \"add\",\r\n            payload: newTodo,\r\n        };\r\n\r\n        dispatch(action);\r\n        reset();\r\n    };\r\n\r\n    let dones = 0;\r\n    for (let i = 0; i < todos.length; i++) {\r\n        if (todos[i].done) {\r\n            dones++;\r\n        }\r\n    }\r\n\r\n    let pors = (dones * 100) / todos.length;\r\n\r\n    const style = {\r\n        width: `${parseInt(pors)}%`\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TodoHeader />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-12 col-sm-12\">\r\n                        <h4>Agregar Tarea</h4>\r\n                        <hr />\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"desc\" className=\"form-label\">\r\n                                    Descripcion\r\n                                </label>\r\n                                <input type=\"text\" onChange={handleInputChange} value={description} name=\"description\" className=\"form-control shadow-lg\" id=\"desc\" aria-describedby=\"descHelp\" />\r\n                                <div id=\"descHelp\" className=\"form-text\">\r\n                                    Escribe una descripcion...\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-grid\">\r\n                                <button type=\"submit\" className=\"btn btn-success\">\r\n                                    Agregar\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-lg-8 col-md col-sm-12\">\r\n                        <TodoList todos={todos} handleDelete={handleDelete} handleToggle={handleToggle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"progress fixed-bottom\">\r\n                <div className=\"progress-bar progress-bar-striped bg-info text-dark\" role=\"progressbar\" style={style} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                    {parseInt(pors)}%\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nimport { TodoApp } from \"./components/TodoApp/TodoApp\";\r\n\r\ndocument.body.className = \"bg-dark bg-gradient text-light\";\r\ndocument.body.style = \"min-height: 100vh\";\r\n\r\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}